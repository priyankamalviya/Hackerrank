/*
Detect a cycle in a linked list. Note that the head pointer may be 'null' if the list is empty.

A Node is defined as: 
    class Node {
        int data;
        Node next;
    }
*/
boolean hasCycle(Node head) {
    Node slow=head;
    Node fast=head;
    
    if(head==null || head.next==null)
       return false; 
        
    while(slow!=null && fast!=null ){ 
         fast=fast.next.next;
         slow=slow.next;
          if(slow==fast)
            return true;      
    }
    return false;
}
