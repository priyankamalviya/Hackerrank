"""
 Reverse a linked list
 head could be None as well for empty list
 Node is defined as
 
 class Node(object):
 
   def __init__(self, data=None, next_node=None):
       self.data = data
       self.next = next_node

 return back the head of the linked list in the below method.
"""

def Reverse(head, prev=None):
    
    if head.next is not None:
        rev = Reverse(head.next, head)
        head.next = prev
        return rev
        
    head.next = prev
    return head



/ * Java: version 2: July 16, 2017* /

/*
  Reverse a linked list and return pointer to the head
  The input list will have at least one element  
  Node is defined as  
  class Node {
     int data;
     Node next;
  }
*/
    // This is a "method-only" submission. 
    // You only need to complete this method. 
Node Reverse(Node head) {
    
    Node prev = null;
    Node current = head;
    Node next = null;
    
    while(current != null){
        next = current.next;
        current.next = prev;
        prev = current;
        current = next;
    }
    
    head = prev;
    
    return head;

}

